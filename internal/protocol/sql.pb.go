// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: sql.proto

package protocol

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// RequestCode is a numberic code identifying the SQL gRPC request to
// handle.
type RequestCode int32

const (
	RequestCode_OPEN                           RequestCode = 0
	RequestCode_PREPARE                        RequestCode = 1
	RequestCode_EXEC                           RequestCode = 2
	RequestCode_QUERY                          RequestCode = 3
	RequestCode_NEXT                           RequestCode = 4
	RequestCode_ROWS_CLOSE                     RequestCode = 5
	RequestCode_COLUMN_TYPE_SCAN_TYPE          RequestCode = 6
	RequestCode_COLUMN_TYPE_DATABASE_TYPE_NAME RequestCode = 7
	RequestCode_STMT_CLOSE                     RequestCode = 8
	RequestCode_BEGIN                          RequestCode = 9
	RequestCode_COMMIT                         RequestCode = 10
	RequestCode_ROLLBACK                       RequestCode = 11
	RequestCode_CLOSE                          RequestCode = 12
	RequestCode_CONN_EXEC                      RequestCode = 13
	// XXX error codes should be part of a separate ResponseCode enum.
	RequestCode_SQL_ERROR RequestCode = 14
)

// Enum value maps for RequestCode.
var (
	RequestCode_name = map[int32]string{
		0:  "OPEN",
		1:  "PREPARE",
		2:  "EXEC",
		3:  "QUERY",
		4:  "NEXT",
		5:  "ROWS_CLOSE",
		6:  "COLUMN_TYPE_SCAN_TYPE",
		7:  "COLUMN_TYPE_DATABASE_TYPE_NAME",
		8:  "STMT_CLOSE",
		9:  "BEGIN",
		10: "COMMIT",
		11: "ROLLBACK",
		12: "CLOSE",
		13: "CONN_EXEC",
		14: "SQL_ERROR",
	}
	RequestCode_value = map[string]int32{
		"OPEN":                           0,
		"PREPARE":                        1,
		"EXEC":                           2,
		"QUERY":                          3,
		"NEXT":                           4,
		"ROWS_CLOSE":                     5,
		"COLUMN_TYPE_SCAN_TYPE":          6,
		"COLUMN_TYPE_DATABASE_TYPE_NAME": 7,
		"STMT_CLOSE":                     8,
		"BEGIN":                          9,
		"COMMIT":                         10,
		"ROLLBACK":                       11,
		"CLOSE":                          12,
		"CONN_EXEC":                      13,
		"SQL_ERROR":                      14,
	}
)

func (x RequestCode) Enum() *RequestCode {
	p := new(RequestCode)
	*p = x
	return p
}

func (x RequestCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sql_proto_enumTypes[0].Descriptor()
}

func (RequestCode) Type() protoreflect.EnumType {
	return &file_sql_proto_enumTypes[0]
}

func (x RequestCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestCode.Descriptor instead.
func (RequestCode) EnumDescriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{0}
}

// ValueCode is a numberic code identifying the Go type of a value.
//
// It supports all types that should be handle by driver.Value in database/sql/driver.
type ValueCode int32

const (
	ValueCode_INT64   ValueCode = 0
	ValueCode_FLOAT64 ValueCode = 1
	ValueCode_BOOL    ValueCode = 2
	ValueCode_BYTES   ValueCode = 3
	ValueCode_STRING  ValueCode = 4
	ValueCode_TIME    ValueCode = 5
	ValueCode_NULL    ValueCode = 6
)

// Enum value maps for ValueCode.
var (
	ValueCode_name = map[int32]string{
		0: "INT64",
		1: "FLOAT64",
		2: "BOOL",
		3: "BYTES",
		4: "STRING",
		5: "TIME",
		6: "NULL",
	}
	ValueCode_value = map[string]int32{
		"INT64":   0,
		"FLOAT64": 1,
		"BOOL":    2,
		"BYTES":   3,
		"STRING":  4,
		"TIME":    5,
		"NULL":    6,
	}
)

func (x ValueCode) Enum() *ValueCode {
	p := new(ValueCode)
	*p = x
	return p
}

func (x ValueCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sql_proto_enumTypes[1].Descriptor()
}

func (ValueCode) Type() protoreflect.EnumType {
	return &file_sql_proto_enumTypes[1]
}

func (x ValueCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueCode.Descriptor instead.
func (ValueCode) EnumDescriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{1}
}

// A single request targeted to a certain SQL connection.
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RequestCode `protobuf:"varint,1,opt,name=code,proto3,enum=protocol.RequestCode" json:"code,omitempty"` // Code identifying the type of request, see below.
	Data []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                            // Serialized request, maps to one of the RequestXXX messages.
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetCode() RequestCode {
	if x != nil {
		return x.Code
	}
	return RequestCode_OPEN
}

func (x *Request) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RequestOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` //  Data source name to pass to the SQL driver.
}

func (x *RequestOpen) Reset() {
	*x = RequestOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOpen) ProtoMessage() {}

func (x *RequestOpen) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOpen.ProtoReflect.Descriptor instead.
func (*RequestOpen) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{1}
}

func (x *RequestOpen) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RequestPrepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *RequestPrepare) Reset() {
	*x = RequestPrepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPrepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPrepare) ProtoMessage() {}

func (x *RequestPrepare) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPrepare.ProtoReflect.Descriptor instead.
func (*RequestPrepare) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{2}
}

func (x *RequestPrepare) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type RequestExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // ID of the prepared statement.
	Args []*Value `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"` // Arguments to bind to the statement.
}

func (x *RequestExec) Reset() {
	*x = RequestExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestExec) ProtoMessage() {}

func (x *RequestExec) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestExec.ProtoReflect.Descriptor instead.
func (*RequestExec) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{3}
}

func (x *RequestExec) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestExec) GetArgs() []*Value {
	if x != nil {
		return x.Args
	}
	return nil
}

type RequestQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // ID of the prepared statement.
	Args []*Value `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"` // Arguments to bind to the statement.
}

func (x *RequestQuery) Reset() {
	*x = RequestQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestQuery) ProtoMessage() {}

func (x *RequestQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestQuery.ProtoReflect.Descriptor instead.
func (*RequestQuery) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{4}
}

func (x *RequestQuery) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestQuery) GetArgs() []*Value {
	if x != nil {
		return x.Args
	}
	return nil
}

type RequestNext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`   // ID of the rows object.
	Len int64 `protobuf:"varint,2,opt,name=len,proto3" json:"len,omitempty"` // Number of columns to fetch.
}

func (x *RequestNext) Reset() {
	*x = RequestNext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestNext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestNext) ProtoMessage() {}

func (x *RequestNext) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestNext.ProtoReflect.Descriptor instead.
func (*RequestNext) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{5}
}

func (x *RequestNext) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestNext) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

type RequestColumnTypeScanType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // ID of the rows object.
	Column int64 `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"` // Index of the column to fetch the type of.
}

func (x *RequestColumnTypeScanType) Reset() {
	*x = RequestColumnTypeScanType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestColumnTypeScanType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestColumnTypeScanType) ProtoMessage() {}

func (x *RequestColumnTypeScanType) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestColumnTypeScanType.ProtoReflect.Descriptor instead.
func (*RequestColumnTypeScanType) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{6}
}

func (x *RequestColumnTypeScanType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestColumnTypeScanType) GetColumn() int64 {
	if x != nil {
		return x.Column
	}
	return 0
}

type RequestColumnTypeDatabaseTypeName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // ID of the rows object.
	Column int64 `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"` // Index of the column to fetch the type name of.
}

func (x *RequestColumnTypeDatabaseTypeName) Reset() {
	*x = RequestColumnTypeDatabaseTypeName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestColumnTypeDatabaseTypeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestColumnTypeDatabaseTypeName) ProtoMessage() {}

func (x *RequestColumnTypeDatabaseTypeName) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestColumnTypeDatabaseTypeName.ProtoReflect.Descriptor instead.
func (*RequestColumnTypeDatabaseTypeName) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{7}
}

func (x *RequestColumnTypeDatabaseTypeName) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestColumnTypeDatabaseTypeName) GetColumn() int64 {
	if x != nil {
		return x.Column
	}
	return 0
}

type RequestRowsClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the rows object.
}

func (x *RequestRowsClose) Reset() {
	*x = RequestRowsClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRowsClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRowsClose) ProtoMessage() {}

func (x *RequestRowsClose) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRowsClose.ProtoReflect.Descriptor instead.
func (*RequestRowsClose) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{8}
}

func (x *RequestRowsClose) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RequestStmtClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the prepared statement.
}

func (x *RequestStmtClose) Reset() {
	*x = RequestStmtClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestStmtClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStmtClose) ProtoMessage() {}

func (x *RequestStmtClose) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStmtClose.ProtoReflect.Descriptor instead.
func (*RequestStmtClose) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{9}
}

func (x *RequestStmtClose) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RequestBegin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestBegin) Reset() {
	*x = RequestBegin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBegin) ProtoMessage() {}

func (x *RequestBegin) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBegin.ProtoReflect.Descriptor instead.
func (*RequestBegin) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{10}
}

type RequestCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Numeric identifier of the transaction.
}

func (x *RequestCommit) Reset() {
	*x = RequestCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCommit) ProtoMessage() {}

func (x *RequestCommit) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCommit.ProtoReflect.Descriptor instead.
func (*RequestCommit) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{11}
}

func (x *RequestCommit) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RequestRollback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Numeric identifier of the transaction.
}

func (x *RequestRollback) Reset() {
	*x = RequestRollback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRollback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRollback) ProtoMessage() {}

func (x *RequestRollback) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRollback.ProtoReflect.Descriptor instead.
func (*RequestRollback) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{12}
}

func (x *RequestRollback) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RequestClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestClose) Reset() {
	*x = RequestClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClose) ProtoMessage() {}

func (x *RequestClose) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClose.ProtoReflect.Descriptor instead.
func (*RequestClose) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{13}
}

type RequestConnExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"` // The statement to execute.
	Args  []*Value `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`   // Arguments to bind to the statement.
}

func (x *RequestConnExec) Reset() {
	*x = RequestConnExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestConnExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestConnExec) ProtoMessage() {}

func (x *RequestConnExec) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestConnExec.ProtoReflect.Descriptor instead.
func (*RequestConnExec) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{14}
}

func (x *RequestConnExec) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *RequestConnExec) GetArgs() []*Value {
	if x != nil {
		return x.Args
	}
	return nil
}

// A single response to a request.
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RequestCode `protobuf:"varint,1,opt,name=code,proto3,enum=protocol.RequestCode" json:"code,omitempty"` // Code identifying the type of the request this response is for, see below.
	Data []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                            // Serialized response, maps to one of the ResponseXXX messages.
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{15}
}

func (x *Response) GetCode() RequestCode {
	if x != nil {
		return x.Code
	}
	return RequestCode_OPEN
}

func (x *Response) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResponseOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseOpen) Reset() {
	*x = ResponseOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOpen) ProtoMessage() {}

func (x *ResponseOpen) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOpen.ProtoReflect.Descriptor instead.
func (*ResponseOpen) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{16}
}

type ResponsePrepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`             // Numeric identifier of the new statement.
	NumInput int64 `protobuf:"varint,2,opt,name=numInput,proto3" json:"numInput,omitempty"` // Number of placeholder parameters.
}

func (x *ResponsePrepare) Reset() {
	*x = ResponsePrepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePrepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePrepare) ProtoMessage() {}

func (x *ResponsePrepare) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePrepare.ProtoReflect.Descriptor instead.
func (*ResponsePrepare) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{17}
}

func (x *ResponsePrepare) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponsePrepare) GetNumInput() int64 {
	if x != nil {
		return x.NumInput
	}
	return 0
}

type ResponseExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastInsertId int64 `protobuf:"varint,1,opt,name=LastInsertId,proto3" json:"LastInsertId,omitempty"`
	RowsAffected int64 `protobuf:"varint,2,opt,name=RowsAffected,proto3" json:"RowsAffected,omitempty"`
}

func (x *ResponseExec) Reset() {
	*x = ResponseExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseExec) ProtoMessage() {}

func (x *ResponseExec) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseExec.ProtoReflect.Descriptor instead.
func (*ResponseExec) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseExec) GetLastInsertId() int64 {
	if x != nil {
		return x.LastInsertId
	}
	return 0
}

func (x *ResponseExec) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

type ResponseQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // Numeric identifier of the new rows result set.
	Columns []string `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"` // Names of the columns in the result set.
}

func (x *ResponseQuery) Reset() {
	*x = ResponseQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseQuery) ProtoMessage() {}

func (x *ResponseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseQuery.ProtoReflect.Descriptor instead.
func (*ResponseQuery) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{19}
}

func (x *ResponseQuery) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseQuery) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ResponseNext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eof    bool     `protobuf:"varint,1,opt,name=eof,proto3" json:"eof,omitempty"`
	Values []*Value `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"` // Column values.
}

func (x *ResponseNext) Reset() {
	*x = ResponseNext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseNext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNext) ProtoMessage() {}

func (x *ResponseNext) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNext.ProtoReflect.Descriptor instead.
func (*ResponseNext) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseNext) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

func (x *ResponseNext) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type ResponseColumnTypeScanType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code ValueCode `protobuf:"varint,1,opt,name=code,proto3,enum=protocol.ValueCode" json:"code,omitempty"` // Column type code.
}

func (x *ResponseColumnTypeScanType) Reset() {
	*x = ResponseColumnTypeScanType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseColumnTypeScanType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseColumnTypeScanType) ProtoMessage() {}

func (x *ResponseColumnTypeScanType) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseColumnTypeScanType.ProtoReflect.Descriptor instead.
func (*ResponseColumnTypeScanType) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{21}
}

func (x *ResponseColumnTypeScanType) GetCode() ValueCode {
	if x != nil {
		return x.Code
	}
	return ValueCode_INT64
}

type ResponseColumnTypeDatabaseTypeName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Column type name.
}

func (x *ResponseColumnTypeDatabaseTypeName) Reset() {
	*x = ResponseColumnTypeDatabaseTypeName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseColumnTypeDatabaseTypeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseColumnTypeDatabaseTypeName) ProtoMessage() {}

func (x *ResponseColumnTypeDatabaseTypeName) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseColumnTypeDatabaseTypeName.ProtoReflect.Descriptor instead.
func (*ResponseColumnTypeDatabaseTypeName) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{22}
}

func (x *ResponseColumnTypeDatabaseTypeName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResponseRowsClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseRowsClose) Reset() {
	*x = ResponseRowsClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRowsClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRowsClose) ProtoMessage() {}

func (x *ResponseRowsClose) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRowsClose.ProtoReflect.Descriptor instead.
func (*ResponseRowsClose) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{23}
}

type ResponseStmtClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseStmtClose) Reset() {
	*x = ResponseStmtClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseStmtClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStmtClose) ProtoMessage() {}

func (x *ResponseStmtClose) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStmtClose.ProtoReflect.Descriptor instead.
func (*ResponseStmtClose) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{24}
}

type ResponseBegin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the newly created transaction.
}

func (x *ResponseBegin) Reset() {
	*x = ResponseBegin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBegin) ProtoMessage() {}

func (x *ResponseBegin) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBegin.ProtoReflect.Descriptor instead.
func (*ResponseBegin) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{25}
}

func (x *ResponseBegin) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResponseCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseCommit) Reset() {
	*x = ResponseCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCommit) ProtoMessage() {}

func (x *ResponseCommit) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCommit.ProtoReflect.Descriptor instead.
func (*ResponseCommit) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{26}
}

type ResponseRollback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseRollback) Reset() {
	*x = ResponseRollback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRollback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRollback) ProtoMessage() {}

func (x *ResponseRollback) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRollback.ProtoReflect.Descriptor instead.
func (*ResponseRollback) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{27}
}

type ResponseClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseClose) Reset() {
	*x = ResponseClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseClose) ProtoMessage() {}

func (x *ResponseClose) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseClose.ProtoReflect.Descriptor instead.
func (*ResponseClose) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{28}
}

type ResponseSQLError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	ExtendedCode int32  `protobuf:"varint,2,opt,name=extended_code,json=extendedCode,proto3" json:"extended_code,omitempty"`
	Err          string `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *ResponseSQLError) Reset() {
	*x = ResponseSQLError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSQLError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSQLError) ProtoMessage() {}

func (x *ResponseSQLError) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSQLError.ProtoReflect.Descriptor instead.
func (*ResponseSQLError) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{29}
}

func (x *ResponseSQLError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseSQLError) GetExtendedCode() int32 {
	if x != nil {
		return x.ExtendedCode
	}
	return 0
}

func (x *ResponseSQLError) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

// Value of a single statement argument or row column.
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ValueCode `protobuf:"varint,1,opt,name=code,proto3,enum=protocol.ValueCode" json:"code,omitempty"` // Code identifying the type of the value, see below.
	Text    string    `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Int64   int64     `protobuf:"varint,3,opt,name=int64,proto3" json:"int64,omitempty"`
	Float64 float64   `protobuf:"fixed64,4,opt,name=float64,proto3" json:"float64,omitempty"`
	Bytes   []byte    `protobuf:"bytes,5,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Time    int64     `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	Bool    bool      `protobuf:"varint,7,opt,name=bool,proto3" json:"bool,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{30}
}

func (x *Value) GetCode() ValueCode {
	if x != nil {
		return x.Code
	}
	return ValueCode_INT64
}

func (x *Value) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Value) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *Value) GetFloat64() float64 {
	if x != nil {
		return x.Float64
	}
	return 0
}

func (x *Value) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *Value) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Value) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

var File_sql_proto protoreflect.FileDescriptor

var file_sql_proto_rawDesc = []byte{
	0x0a, 0x09, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x48, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x21, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x42, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x43,
	0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65,
	0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6c, 0x65, 0x6e, 0x22, 0x43, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x4b, 0x0a, 0x21, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x6f, 0x77, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6d, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e,
	0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x22, 0x1f,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x21, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x22, 0x4c, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x45, 0x78, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x22, 0x49, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x0e, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x22, 0x3d, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6e, 0x75, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x56, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x78, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x49, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6f, 0x66, 0x12,
	0x27, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x38, 0x0a, 0x22, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0x13,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x51, 0x4c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xb2, 0x01, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36,
	0x34, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x2a,
	0xf0, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x45,
	0x50, 0x41, 0x52, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x58, 0x45, 0x43, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x45, 0x58, 0x54, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4f, 0x57, 0x53, 0x5f, 0x43, 0x4c,
	0x4f, 0x53, 0x45, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x06,
	0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x4d, 0x54, 0x5f, 0x43, 0x4c, 0x4f,
	0x53, 0x45, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x09, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f,
	0x53, 0x45, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x5f, 0x45, 0x58, 0x45,
	0x43, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x51, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x0e, 0x2a, 0x58, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c,
	0x4f, 0x41, 0x54, 0x36, 0x34, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x06, 0x32, 0x38, 0x0a, 0x03,
	0x53, 0x51, 0x4c, 0x12, 0x31, 0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2c, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x64, 0x72, 0x6f, 0x72, 0x2f, 0x67, 0x6f, 0x2d, 0x67,
	0x72, 0x70, 0x63, 0x2d, 0x73, 0x71, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sql_proto_rawDescOnce sync.Once
	file_sql_proto_rawDescData = file_sql_proto_rawDesc
)

func file_sql_proto_rawDescGZIP() []byte {
	file_sql_proto_rawDescOnce.Do(func() {
		file_sql_proto_rawDescData = protoimpl.X.CompressGZIP(file_sql_proto_rawDescData)
	})
	return file_sql_proto_rawDescData
}

var file_sql_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sql_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_sql_proto_goTypes = []interface{}{
	(RequestCode)(0),                           // 0: protocol.RequestCode
	(ValueCode)(0),                             // 1: protocol.ValueCode
	(*Request)(nil),                            // 2: protocol.Request
	(*RequestOpen)(nil),                        // 3: protocol.RequestOpen
	(*RequestPrepare)(nil),                     // 4: protocol.RequestPrepare
	(*RequestExec)(nil),                        // 5: protocol.RequestExec
	(*RequestQuery)(nil),                       // 6: protocol.RequestQuery
	(*RequestNext)(nil),                        // 7: protocol.RequestNext
	(*RequestColumnTypeScanType)(nil),          // 8: protocol.RequestColumnTypeScanType
	(*RequestColumnTypeDatabaseTypeName)(nil),  // 9: protocol.RequestColumnTypeDatabaseTypeName
	(*RequestRowsClose)(nil),                   // 10: protocol.RequestRowsClose
	(*RequestStmtClose)(nil),                   // 11: protocol.RequestStmtClose
	(*RequestBegin)(nil),                       // 12: protocol.RequestBegin
	(*RequestCommit)(nil),                      // 13: protocol.RequestCommit
	(*RequestRollback)(nil),                    // 14: protocol.RequestRollback
	(*RequestClose)(nil),                       // 15: protocol.RequestClose
	(*RequestConnExec)(nil),                    // 16: protocol.RequestConnExec
	(*Response)(nil),                           // 17: protocol.Response
	(*ResponseOpen)(nil),                       // 18: protocol.ResponseOpen
	(*ResponsePrepare)(nil),                    // 19: protocol.ResponsePrepare
	(*ResponseExec)(nil),                       // 20: protocol.ResponseExec
	(*ResponseQuery)(nil),                      // 21: protocol.ResponseQuery
	(*ResponseNext)(nil),                       // 22: protocol.ResponseNext
	(*ResponseColumnTypeScanType)(nil),         // 23: protocol.ResponseColumnTypeScanType
	(*ResponseColumnTypeDatabaseTypeName)(nil), // 24: protocol.ResponseColumnTypeDatabaseTypeName
	(*ResponseRowsClose)(nil),                  // 25: protocol.ResponseRowsClose
	(*ResponseStmtClose)(nil),                  // 26: protocol.ResponseStmtClose
	(*ResponseBegin)(nil),                      // 27: protocol.ResponseBegin
	(*ResponseCommit)(nil),                     // 28: protocol.ResponseCommit
	(*ResponseRollback)(nil),                   // 29: protocol.ResponseRollback
	(*ResponseClose)(nil),                      // 30: protocol.ResponseClose
	(*ResponseSQLError)(nil),                   // 31: protocol.ResponseSQLError
	(*Value)(nil),                              // 32: protocol.Value
}
var file_sql_proto_depIdxs = []int32{
	0,  // 0: protocol.Request.code:type_name -> protocol.RequestCode
	32, // 1: protocol.RequestExec.args:type_name -> protocol.Value
	32, // 2: protocol.RequestQuery.args:type_name -> protocol.Value
	32, // 3: protocol.RequestConnExec.args:type_name -> protocol.Value
	0,  // 4: protocol.Response.code:type_name -> protocol.RequestCode
	32, // 5: protocol.ResponseNext.values:type_name -> protocol.Value
	1,  // 6: protocol.ResponseColumnTypeScanType.code:type_name -> protocol.ValueCode
	1,  // 7: protocol.Value.code:type_name -> protocol.ValueCode
	2,  // 8: protocol.SQL.Conn:input_type -> protocol.Request
	17, // 9: protocol.SQL.Conn:output_type -> protocol.Response
	9,  // [9:10] is the sub-list for method output_type
	8,  // [8:9] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_sql_proto_init() }
func file_sql_proto_init() {
	if File_sql_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPrepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestNext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestColumnTypeScanType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestColumnTypeDatabaseTypeName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRowsClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestStmtClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBegin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRollback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestConnExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePrepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseNext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseColumnTypeScanType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseColumnTypeDatabaseTypeName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRowsClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStmtClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseBegin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRollback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSQLError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sql_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sql_proto_goTypes,
		DependencyIndexes: file_sql_proto_depIdxs,
		EnumInfos:         file_sql_proto_enumTypes,
		MessageInfos:      file_sql_proto_msgTypes,
	}.Build()
	File_sql_proto = out.File
	file_sql_proto_rawDesc = nil
	file_sql_proto_goTypes = nil
	file_sql_proto_depIdxs = nil
}
